#!/bin/sh

if type "kill" > /dev/null 2>&1; then
  function kill-peco {
    for pid in `\ps aux | peco | awk '{ print $2 }'`
    do
      kill -9 $pid
    done
  }

  alias kp="kill-peco"
fi

if type "ssh" > /dev/null 2>&1; then
  function ssh-peco {
    local selected_hosts=$(awk '
      tolower($1)=="host" {
        for (i=2; i<=NF; i++) {
          if ($i !~ "[*?]") {
            print $i
          }
        }
      }
    ' ~/.ssh/config | sort | peco --query "$LBUFFER")
    if [ -n "$selected_hosts" ]; then
      ssh $selected_hosts
    fi
  }

  alias sp="ssh-peco"
fi

if type "ssh-add" > /dev/null 2>&1; then
  function ssh-add-peco {
    local identityfiles=`find $HOME/.ssh -type f -perm 600 -not -name config | peco`
    if [ -n "$identityfiles" ]; then
      ssh-add $identityfiles
    fi
  }

  alias sap="ssh-add-peco"
fi

if type "tmux" > /dev/null 2>&1; then
  function tmux-attach-peco {
    if [ -n "$TMUX" ]; then
      echo 'Do not use this command in a tmux session.'
      return 1
    fi

    tmux ls > /dev/null

    if [ $? -ne 0 ]; then
      return
    fi

    local session="$(tmux list-sessions | peco | cut -d : -f 1)"
    if [ -n "$session" ]; then
      tmux a -t $session
    fi
  }

  alias tap="tmux-peco"
fi

if type "docker" > /dev/null 2>&1; then
  function docker-exec-peco {
    local container=`docker ps | awk 'NR > 1 {print $1 "\t\t" $2 "\t\t" $NF}'`
    if [ ! -n "$container" ]; then
      echo "There is no running container"
      return
    fi
    container=`echo $container | peco | awk '{print $1}'`
    if [ -n "$container" ]; then
      docker exec -it $container $SHELL
    fi
  }
  alias dep="docker-exec-peco"
fi


