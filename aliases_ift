#!/bin/sh

function set-cmd () {
  if [[ $CURT_SHELL_BPATH == "zsh" ]]; then
    print -z $1
  #elif [[ $CURT_SHELL_BPATH == "bash" ]]; then
  #  print -z $1
  #  READLINE_LINE=$1
  #  READLINE_POINT=${#READLINE_LINE}
  else
    echo "$1"
    eval "$1"
  fi
}

if type "kill" > /dev/null 2>&1; then
  function kill-ift {
    for pid in `\ps aux | $IFT | awk '{ print $2 }'`
    do
      set-cmd "kill -9 $pid"
    done
  }

  alias kif="kill-ift"
fi

if type "ssh" > /dev/null 2>&1; then
  function ssh-ift {
    local selected_hosts=$(awk '
      tolower($1)=="host" {
        for (i=2; i<=NF; i++) {
          if ($i !~ "[*?]") {
            print $i
          }
        }
      }
    ' ~/.ssh/config | sort | $IFT --query "$LBUFFER")
    if [ -n "$selected_hosts" ]; then
      set-cmd "ssh $selected_hosts"
    fi
  }

  alias sif="ssh-ift"
fi

if type "ssh-add" > /dev/null 2>&1; then
  function ssh-add-ift {
    local identityfiles=`find $HOME/.ssh -type f -perm 600 -not -name config | $IFT`
    if [ -n "$identityfiles" ]; then
      set-cmd "ssh-add $identityfiles"
    fi
  }

  alias saif="ssh-add-ift"
fi

if type "tmux" > /dev/null 2>&1; then
  function tmux-attach-ift {
    if [ -n "$TMUX" ]; then
      echo 'Do not use this command in a tmux session.'
      return 1
    fi

    tmux ls > /dev/null

    if [ $? -ne 0 ]; then
      return
    fi

    local session="$(tmux list-sessions | $IFT | cut -d : -f 1)"
    if [ -n "$session" ]; then
      set-cmd "tmux a -t $session"
    fi
  }

  alias taif="tmux-attach-ift"

  function tmux-kill-ift {
    if [ -n "$TMUX" ]; then
      echo 'Do not use this command in a tmux session.'
      return 1
    fi

    tmux ls > /dev/null

    if [ $? -ne 0 ]; then
      return
    fi

    local session="$(tmux list-sessions | $IFT | cut -d : -f 1)"
    if [ -n "$session" ]; then
      set-cmd "tmux kill-session -t $session"
    fi
  }

  alias tkif="tmux-kill-ift"
fi

if type "docker" > /dev/null 2>&1; then
  function docker-exec-ift {
    local container="`docker ps | awk 'NR>1'`"
    if [ ! -n "$container" ]; then
      echo "There is no running container"
      return
    fi
    container=`docker ps | awk 'NR>1 {print $1 "\t\t" $2 "\t\t" $NF}' | $IFT | awk '{print $1}'`
    if [ -n "$container" ]; then
      set-cmd "docker exec -it $container `basename $CURT_SHELL_BPATH`"
    fi
  }
  alias deif="docker-exec-ift"
fi


